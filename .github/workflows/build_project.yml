name: Build godot project
on:
  push:
    branches:
      - "CI"
      - "release-ld51"
jobs:
  Build-HTML5:
    runs-on: ubuntu-latest
    env:
      GODOT: Godot_v3.5.1-stable_linux_headless.64
      LD: "51"
    steps:
      - run: |
          echo "GIT_SHA=${GITHUB_SHA}" >> $GITHUB_ENV
          echo "GIT_BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
      - run: echo "Building branch ${GIT_BRANCH}"
      - run: sudo apt update && sudo apt upgrade --yes --force-yes
      - run: sudo apt install unzip curl git --yes --force-yes
      - run: sudo locale-gen en_US.UTF-8
      - run: echo "LANG=en_US.UTF-8" | sudo tee /etc/locale.conf
      - run: echo "Install godot dependencies"
      - run: sudo apt install xvfb libxcursor1 libxinerama1 libxrandr2 libxi6 libasound2 libpulse0 libgl1-mesa-glx --yes --force-yes
      - run: echo "Download godot version ${GODOT}"
      - run: curl https://downloads.tuxfamily.org/godotengine/3.5.1/${GODOT}.zip > /tmp/${GODOT}.zip
      - run: unzip -p /tmp/${GODOT}.zip > /tmp/${GODOT} && chmod +x /tmp/${GODOT}
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          clean: false
          fetch-depth: 0
      - run: mkdir _build
      - run: echo "Create export_presets.cfg"
      - run: |
              cat > export_presets.cfg <<EOF
              [preset.0]
              name="HTML5"
              platform="HTML5"
              runnable=true
              custom_features=""
              export_filter="all_resources"
              include_filter=""
              exclude_filter=""
              script_export_mode=1
              script_encryption_key=""
              locale="en"
              export_path="_build"

              [preset.0.options]
              custom_template/debug=""
              custom_template/release="./templates/webassembly_release.zip"
              variant/export_type=0
              vram_texture_compression/for_desktop=true
              vram_texture_compression/for_mobile=false
              html/custom_html_shell=""
              html/head_include=""
              html/canvas_resize_policy=1
              html/experimental_virtual_keyboard=false
              EOF

      - run: echo "export the project"
      - run: /tmp/${GODOT} --export HTML5 _build/LD${LD}-$(git rev-parse --short "$GITHUB_SHA").html
      - run: cd _build && ln -s LD${LD}-$(git rev-parse --short "$GITHUB_SHA").html index.html
      - name: check-out pages
        uses: actions/checkout@v2
        with:
          path: former-pages
          ref: gh-pages
      - run: |
              [ -d site/content/games/${GIT_BRANCH}/${GITHUB_SHA}/ ] || mkdir -p site/content/games/${GIT_BRANCH}/${GITHUB_SHA}/
              rsync -r former-pages/games/* site/content/games
              tree site
              # Move the recently build game
              mv _build/* site/content/games/${GIT_BRANCH}/${GITHUB_SHA}/
              tree site
              python .github/workflows/generate_build_page.py site/content/games > site/content/pages/builds.md
              pip install -r site/requirements.txt
              cd site && make publish

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@4.1.1
        with:
          branch: gh-pages
          folder: site/output
